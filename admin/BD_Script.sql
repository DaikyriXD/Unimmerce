-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.auditoria_usuarios
(
    id_auditoria integer NOT NULL DEFAULT nextval('auditoria_usuarios_id_auditoria_seq'::regclass),
    id_usuario integer,
    id_articulo integer,
    id_ventas integer,
    fecha_accion timestamp without time zone NOT NULL,
    accion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auditoria_usuarios_pkey PRIMARY KEY (id_auditoria)
);

CREATE TABLE IF NOT EXISTS public.carrito_compras
(
    id integer NOT NULL DEFAULT nextval('carrito_compras_id_seq'::regclass),
    id_cliente integer,
    "id_artículo" integer,
    cantidad integer,
    CONSTRAINT carrito_compras_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categorias
(
    id_categoria integer NOT NULL DEFAULT nextval('categorias_id_categoria_seq'::regclass),
    nombre_categoria character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categorias_pkey PRIMARY KEY (id_categoria)
);

CREATE TABLE IF NOT EXISTS public.ciudades
(
    id integer NOT NULL DEFAULT nextval('ciudades_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT ciudades_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clientes
(
    id integer NOT NULL DEFAULT nextval('clientes_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default",
    "correo_electrónico" character varying(100) COLLATE pg_catalog."default",
    "dirección" character varying(255) COLLATE pg_catalog."default",
    id_ciudad integer,
    "número_teléfono" character varying(20) COLLATE pg_catalog."default",
    fecha_registro timestamp without time zone,
    CONSTRAINT clientes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comentarios_calificaciones
(
    id integer NOT NULL DEFAULT nextval('comentarios_calificaciones_id_seq'::regclass),
    id_cliente integer,
    "id_artículo" integer,
    comentario character varying(255) COLLATE pg_catalog."default",
    "calificación" numeric(3, 2),
    CONSTRAINT comentarios_calificaciones_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."direcciones_envío"
(
    id integer NOT NULL DEFAULT nextval('"direcciones_envío_id_seq"'::regclass),
    id_cliente integer,
    "dirección" character varying(255) COLLATE pg_catalog."default",
    ciudad character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT "direcciones_envío_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.files
(
    id integer NOT NULL DEFAULT nextval('files_id_seq'::regclass),
    filename text COLLATE pg_catalog."default",
    filesize integer DEFAULT 0,
    web_path text COLLATE pg_catalog."default",
    system_path text COLLATE pg_catalog."default",
    CONSTRAINT files_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.formas_pago
(
    id integer NOT NULL DEFAULT nextval('formas_pago_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT formas_pago_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.historial_compras
(
    id integer NOT NULL DEFAULT nextval('historial_compras_id_seq'::regclass),
    id_cliente integer,
    id_venta integer,
    CONSTRAINT historial_compras_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.productos
(
    id integer NOT NULL DEFAULT nextval('"artículos_id_seq"'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default",
    "descripción" character varying(255) COLLATE pg_catalog."default",
    precio numeric(10, 2),
    imagen character varying(255) COLLATE pg_catalog."default",
    disponibilidad boolean,
    "categoría" character varying(100) COLLATE pg_catalog."default",
    id_categoria integer,
    CONSTRAINT "artículos_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.productos_img
(
    producto_id integer NOT NULL,
    file_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.usuarios
(
    id integer NOT NULL DEFAULT nextval('usuarios_id_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default",
    "correo_electrónico" character varying(100) COLLATE pg_catalog."default",
    "contraseña" character varying(100) COLLATE pg_catalog."default",
    tipo_usuario character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT usuarios_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ventas
(
    id integer NOT NULL DEFAULT nextval('ventas_id_seq'::regclass),
    id_cliente integer,
    "id_artículo" integer,
    fecha timestamp without time zone,
    cantidad integer,
    precio_total numeric(10, 2),
    forma_pago character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT ventas_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.auditoria_usuarios
    ADD CONSTRAINT auditoria_usuarios_id_articulo_fkey FOREIGN KEY (id_articulo)
    REFERENCES public.productos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.auditoria_usuarios
    ADD CONSTRAINT auditoria_usuarios_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.auditoria_usuarios
    ADD CONSTRAINT auditoria_usuarios_id_ventas_fkey FOREIGN KEY (id_ventas)
    REFERENCES public.ventas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.clientes
    ADD CONSTRAINT fk_clientes_ciudades FOREIGN KEY (id_ciudad)
    REFERENCES public.ciudades (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.productos
    ADD CONSTRAINT "artículos_id_categoria_fkey" FOREIGN KEY (id_categoria)
    REFERENCES public.categorias (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.productos_img
    ADD CONSTRAINT productos_img_file_id_fkey FOREIGN KEY (file_id)
    REFERENCES public.files (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.productos_img
    ADD CONSTRAINT productos_img_producto_id_fkey FOREIGN KEY (producto_id)
    REFERENCES public.productos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ventas
    ADD CONSTRAINT "fk_ventas_artículos" FOREIGN KEY ("id_artículo")
    REFERENCES public.productos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ventas
    ADD CONSTRAINT fk_ventas_clientes FOREIGN KEY (id_cliente)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;